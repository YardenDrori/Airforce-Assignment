{"ast":null,"code":"var _jsxFileName = \"/Users/yardendrori/Documents/GitHub/Airforce-Assignment/monitor-frontend/src/components/Button.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button() {\n  _s();\n  const [content, setContent] = useState(null);\n  function handleClick(buttonId) {\n    console.log('Button clicked: ', buttonId);\n    if (buttonId === 'text') {\n      setContent(/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"kys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this));\n    } else if (buttonId === 'visual') {\n      setContent(/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Visual content coming soon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this));\n    } else if (buttonId === 'plus') {\n      setContent(/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Plus content goes here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this));\n    } else {\n      console.log('ERROR: unknown buttonID');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button\",\n        onClick: () => handleClick(\"text\"),\n        children: \"TEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button\",\n        onClick: () => handleClick(\"visual\"),\n        children: \"VISUAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button\",\n        onClick: () => handleClick(\"plus\"),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Button, \"hxYSKQm8kgLtOomP3hhKnaf+o4Q=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Button","_s","content","setContent","handleClick","buttonId","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/yardendrori/Documents/GitHub/Airforce-Assignment/monitor-frontend/src/components/Button.tsx"],"sourcesContent":["import React, { useState, ReactElement } from 'react';\nimport './Button.css';\n\nfunction Button() {\n  const [content, setContent] = useState<ReactElement | null>(null);\n\n  function handleClick(buttonId: string) {\n    console.log('Button clicked: ', buttonId);\n    if (buttonId === 'text') {\n      setContent(\n      <p>kys</p>\n    );\n    } else if (buttonId === 'visual') {\n      setContent(\n      <p>Visual content coming soon...</p>\n    );\n    } else if (buttonId === 'plus') {\n      setContent(\n      <p>Plus content goes here.</p>\n    );\n    } else {\n      console.log('ERROR: unknown buttonID');\n    }\n  }\n\n  return (\n    <div className='main-body'>\n      <div className='Buttons'>\n        <button className='Button' onClick={() => handleClick(\"text\")}>TEXT</button>\n        <button className='Button' onClick={() => handleClick(\"visual\")}>VISUAL</button>\n        <button className='Button' onClick={() => handleClick(\"plus\")}>+</button>\n      </div>\n      <div>\n        {content}\n      </div>\n    </div>\n  );\n}\n\nexport default Button;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAsB,OAAO;AACrD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAsB,IAAI,CAAC;EAEjE,SAASO,WAAWA,CAACC,QAAgB,EAAE;IACrCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;IACzC,IAAIA,QAAQ,KAAK,MAAM,EAAE;MACvBF,UAAU,cACVJ,OAAA;QAAAS,QAAA,EAAG;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACX,CAAC;IACD,CAAC,MAAM,IAAIP,QAAQ,KAAK,QAAQ,EAAE;MAChCF,UAAU,cACVJ,OAAA;QAAAS,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACrC,CAAC;IACD,CAAC,MAAM,IAAIP,QAAQ,KAAK,MAAM,EAAE;MAC9BF,UAAU,cACVJ,OAAA;QAAAS,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/B,CAAC;IACD,CAAC,MAAM;MACLN,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC;EACF;EAEA,oBACER,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBT,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAAL,QAAA,gBACtBT,OAAA;QAAQc,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,MAAM,CAAE;QAAAI,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5Eb,OAAA;QAAQc,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,QAAQ,CAAE;QAAAI,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChFb,OAAA;QAAQc,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,MAAM,CAAE;QAAAI,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACNb,OAAA;MAAAS,QAAA,EACGN;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAlCQD,MAAM;AAAAe,EAAA,GAANf,MAAM;AAoCf,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}